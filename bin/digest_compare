#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require_relative "../lib/app"

kubernetes = App::Kubernetes::Client.new(host: "127.0.0.1:8001", scheme: :http)

IMAGES = kubernetes.core_v1_api
                   .list_core_v1_pod_for_all_namespaces
                   .items
                   .flat_map { _1.status.container_statuses }
                   .map { App::PodImage.new(target: _1.image, deployed: _1.image_id) }
                   .uniq(&:target)

SEM = Async::Semaphore.new(20)

def fetch(image)
  SEM.async do
    {
      image: SEM.async { image.target },
      our_digest: SEM.async { App::Docker::Registry.published_digest(image) },
      skopeo_digest: SEM.async { `skopeo inspect docker://#{image.target} | jq -r .Digest`.strip }
    }.transform_values(&:wait)
  end
end

Sync do
  res = IMAGES.filter_map { fetch(_1) if App::Docker::Registry.supported?(_1) }
              .map(&:wait)

  res.each do |info|
    puts(info) if info[:our_digest] != info[:skopeo_digest]
  end
end
